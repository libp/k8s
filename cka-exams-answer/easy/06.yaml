# 重新配置现有的部署前端，并添加一个名为http的端口配置，将现有容器nginx的80/tcp端口暴露出来。
# 创建一个名为front-end-svc的新服务，将容器端口http暴露出来。
# 配置新服务，使其通过节点上的NodePort也能访问各个Pod。

# 关键字：service
# 链接：https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/
# https://kubernetes.io/zh-cn/docs/concepts/services-networking/service/

# 分数：7


#  selector:
#    app: front-end
# 这个selector 是个失分点；解题之后，要用service的地址进行curl测试
# 另外培训老师给他的实验环境，注意创建svc时指定namespace


# 解题

#front-end.yaml

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: front-end
  name: front-end
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  strategy: {}
  template:
    metadata:
      labels:
        app: front-end
    spec:
      containers:
      - image: nginx
        name: nginx
        resources: {}

# front-end-svc.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app: front-end-svc
  name: front-end-svc
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: front-end
  type: NodePort

# kubectl edit deploy front-end

# ```
        ports:
        - name: http
          containerPort: 80
          protocol: TCP

# ```

# kubectl apply -f front-end-svc.yaml

# kubectl create service nodeport front-end-svc --tcp=80:80 --dry-run=client -o yam